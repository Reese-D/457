#include <sys/socket.h>
#include <netinet/in.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

mkError(int condition, char *err){
  if(condition < 0){
    fprintf(stderr, "%s\n", err);
    return 1;
  }
}

int main(int argc, char** argv){
  int sockfd = socket(AF_INET, SOCK_STREAM, 0);
  mkError(sockfd, "There was an error creating the socket");

  struct sockaddr_in serveraddr; //server address can only be Ipv4
  serveraddr.sin_family = AF_INET; //Ipv4 again, will matter if cast to a more generic type 'socketaddr'
  //ports between 1024 and 49,000ish
  //actually 2 ports one to listen on and one the other program is listening on but the os takes care of this behind the scenes
  serveraddr.sin_port = htons(4456); //lets os know there is a program listening on this port so that it will redirect packets here
  //127.0.0.1 is good testing address it is a loopback address, and always refers back to your own computer
  serveraddr.sin_addr.ss_addr = inet_addr("127.0.0.1"); //use other computers ip address
  
  int  e = connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr)); //sockaddr is more generic than sockaddr_in
  mkError(e, "There was an error with connecting\n");
  printf("Enter a message: ");
  char line[5000];
  fgets(line, 5000, stdin);
  send(sockfd, line, strlen(line),0);
  close(sockfd);
}
